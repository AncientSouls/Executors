{"version":3,"sources":["../src/lib/manager.js"],"names":["Manager","Item","_items","name","query"],"mappings":"ikBAAA,4B,2QAEA;;MAGMA,Q,YAEJ;;;KAIA,iBAAYC,IAAZ,CAAkB,+BAEhB;;;OAIA,KAAKC,MAAL,CAAc,EAAd,CAEA;;;OAIC,KAAKD,IAAL,CAAYA,IAEd,CAED;;;;;;;yDAQIE,I,CAAMC,K,CAAO,CACf,GAAID,IAAJ,CAAU,CACR,GAAI,KAAKD,MAAL,CAAYC,IAAZ,CAAJ,CAAuB,MAAO,MAAKD,MAAL,CAAYC,IAAZ,CAAP,CAAvB,IACK,OAAQ,MAAKD,MAAL,CAAYC,IAAZ,EAAoB,GAAI,MAAKF,IAAT,CAAc,IAAd,CAAoBE,IAApB,CAA0BC,KAA1B,CAClC,CAHD,IAGO,CACL,MAAO,IAAI,MAAKH,IAAT,CAAc,IAAd,CAAoBE,IAApB,CAA0BC,KAA1B,CACR,CACF,C,sCAIYJ,O","file":"manager.js","sourcesContent":["import Item from './item';\n\n/**\n * @class\n */\nclass Manager {\n  \n  /**\n   * @constructs Manager\n   * @param {function} Item - class extended from Item\n   */\n  constructor(Item) {\n    \n    /**\n     * @type {Object.<string,Item>}\n     * @protected\n     */\n    this._items = {};\n    \n    /**\n     * @type {function}\n     * @protected\n     */\n     this.Item = Item;\n    \n  }\n  \n  /**\n   * Universal getter of items. Not mount or prepare item, just return it. You must manual use `prepare` and `mount` methods.\n   * @param {string} name - If not sended, create new unnamed item.\n   * @param [query] - Preparation is responsible for responding to the query. It may, query can be required in your Item class. \n   * @returns {Item}\n   * @example\n   * manager.get('a').prepare((error, a) => {});\n   */\n  get(name, query) {\n    if (name) {\n      if (this._items[name]) return this._items[name];\n      else return (this._items[name] = new this.Item(this, name, query));\n    } else {\n      return new this.Item(this, name, query);\n    }\n  }\n  \n}\n\nexport default Manager;"]}