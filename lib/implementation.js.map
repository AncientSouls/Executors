{"version":3,"sources":["../src/lib/implementation.js"],"names":["Item","isMounted","Promise","resolve","data","reject","type","get","then","typeItem","set","getResult","mount","call","catch","result","item","Error","id","Object","keys","parents","length","all","childs","map","c","unset","unmount","unmountType","Module","children","parent","loaded","exports","js","module","child","runInNewContext","code","require","name","undefined"],"mappings":"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","file":"implementation.js","sourcesContent":["import {\n  Item as ProtoItem,\n} from '../lib';\n\nimport vm from 'vm';\nimport PromiseProps from 'p-props';\n\n// Freely extend this class with your custom logic.\nclass Item extends ProtoItem {\n  mount() {\n    if (this.isMounted()) return Promise.resolve(this);\n    if (!this.data) return Promise.reject('Data not founded.');\n    \n    return new Promise((resolve, reject) => {\n      if (this.data.type) {\n        // Support for custom type mounter.\n        this.get(this.data.type).then((typeItem) => {\n          this.set(null, typeItem);\n          var type = typeItem.getResult();\n          if (type.mount) type.mount.call(this).then(() => resolve(this), reject);\n          else resolve(this);\n        }).catch(reject);\n      } else {\n        // Support for non-stored, system data types.\n        this.getResult = () => this.data.result;\n        resolve(this);\n      }\n    }).then((item) => {\n      if (!item.isMounted()) throw new Error(`Item { id: \"${this.data.id}\", type: \"${this.data.type}\" } is not mounted. Type not define getResult method.`);\n      return item;\n    });\n  }\n  unmount() {\n    if (!this.isMounted()) return Promise.resolve(this);\n    if (Object.keys(this.parents).length) return Promise.resolve(this);\n    \n    delete this.getResult;\n    \n    return Promise\n    // Unmount and unset childs before try unmount current item.\n    .all(Object.keys(this.childs).map((c) => {\n      this.unset(this.childs[c]);\n      return this.childs[c].unmount();\n    }))\n    .then(() => {\n      // System non-stored data, is not unmountable.\n      if (!this.data.type) return this;\n      \n      // Load custom type unmounter.\n      return this.get(this.data.type).then((typeItem) => {\n        var type = typeItem.getResult();\n        \n        var unmountType = () => {\n          this.unset(typeItem);\n          return typeItem.unmount().then(() => this);\n        };\n        \n        if (type.unmount) return type.unmount.call(this).then(unmountType);\n        else {\n          unmountType();\n          return this;\n        }\n      }).then(() => this);\n    })\n  }\n}\n\n/**\n * @name Item#data\n * @type {Link=}\n */\n\n/**\n * @interface Data\n */\n\n/**\n * @name Data#id\n * @type {string=}\n */\n\n/**\n * @name Data#type\n * @type {string=}\n * @descirption\n * If is undefined, result gets from data.result directly, without mounting.\n */\n\n\nvar Module = function(id, item) {\n  this.id = id;\n  this.children = [];\n  this.parent = null;\n  this.loaded = false;\n  this.exports = {};\n  this.item = item;\n};\n\nvar js = {\n  result: {\n    mount() {\n      var module = new Module(this.data.id, this);\n      this.getResult = () => module.exports;\n      \n      var childs = {};\n      if (this.data.childs) for (var c in this.data.childs)\n        childs[c] = ((c) => this.get(this.data.childs[c]).then((child) => {\n          this.set(c, child);\n          return child;\n        }))(c);\n      \n      return PromiseProps(childs).then((childs) => {\n        vm.runInNewContext(this.data.code, {\n          module,\n          require: (name) => childs[name].getResult ? childs[name].getResult() : undefined,\n        });\n        \n        return this;\n      });\n    },\n  },\n};\n\nexport {\n  Module,\n  Item,\n  js,\n};"]}