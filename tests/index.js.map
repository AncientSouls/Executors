{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","describe","generateManager","callback","prepared","undefined","mounted","it","done","manager","get","prepare","error","item","ifError","isTrue","isPrepared","equal","_items","a","mount","isMounted","remount","oldE","oldI","newE","newI","isUnmounted","isNotOk","isOk","unmount","memory","data","name","c","childs","prepareChild","child","next","mountChild","b","lengthOf","parents","d","e","f","exports","type","eval","unmounted"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport { Manager, Item } from '../lib';\nimport { ObjectGraph } from 'ancient-graph';\nimport async from 'async';\nimport each from 'async/each';\n\ndescribe('AncientSouls/Funicular', () => {\n  describe('core', () => {\n    function generateManager() {\n      return new Manager(\n        class extends Item {\n          preparation(callback) {\n            this.prepared(undefined, callback);\n          }\n          mounting(callback) {\n            this.mounted(undefined, callback);\n          }\n        }\n      );\n    };\n    \n    it('should check full lifecicle of one item', (done) => {\n      var manager = generateManager();\n      \n      manager\n        .get('a')\n        .prepare((error, item) => {\n          assert.ifError(error);\n          assert.isTrue(item.isPrepared);\n          assert.equal(manager._items.a, item);\n          \n          item.mount((error, item) => {\n            assert.ifError(error);\n            assert.isTrue(item.isMounted);\n            \n            item.remount(undefined, (oldE, oldI, newE, newI) => {\n              assert.ifError(oldE);\n              assert.ifError(newE);\n              \n              assert.isTrue(oldI.isUnmounted);\n              assert.isTrue(newI.isMounted);\n              assert.isNotOk(newI.isUnmounted);\n              \n              assert.isOk(manager._items.a == newI);\n              assert.isNotOk(manager._items.a == oldI);\n              \n              newI.unmount((error, item) => {\n                assert.ifError(error);\n                assert.isTrue(item.isUnmounted);\n                assert.isNotOk(manager._items.a);\n                \n                done();\n              })\n            });\n          });\n        })\n      ;\n    });\n  });\n  describe('hierarchical', () => {\n    function generateManager(memory) {\n      return new Manager(\n        class extends Item {\n          preparation(callback) {\n            this.data = memory[this.name];\n            for (var c in this.data.childs) {\n              this.prepareChild(this.data.childs[c]);\n            }\n            this.prepared(undefined, callback);\n          }\n          mounting(callback) {\n            each(this.childs, (child, next) => {\n              this.mountChild(child, () => {\n                next();\n              });\n            }, () => this.mounted(undefined, callback));\n          }\n        }\n      );\n    };\n    \n    it('should prepare, mount, unmount all', (done) => {\n      var memory = {\n        a: { childs: ['b'] },\n        b: { childs: ['c'] },\n        c: {},\n      };\n      \n      var manager = generateManager(memory);\n      \n      manager\n        .get('a')\n        .prepare((error, item) => {\n          assert.ifError(error);\n          \n          var a = item;\n          var b = item.childs.b;\n          var c = item.childs.b.childs.c;\n          \n          assert.equal(manager._items.a, a);\n          assert.equal(manager._items.b, b);\n          assert.equal(manager._items.c, c);\n          \n          assert.lengthOf(c.parents, 1);\n          assert.lengthOf(b.parents, 1);\n          assert.lengthOf(a.parents, 0);\n          \n          assert.isTrue(a.isPrepared);\n          assert.isTrue(b.isPrepared);\n          assert.isTrue(c.isPrepared);\n          \n          item.mount((error, item) => {\n            assert.ifError(error);\n            \n            assert.isTrue(a.isMounted);\n            assert.isTrue(b.isMounted);\n            assert.isTrue(c.isMounted);\n          \n            assert.lengthOf(c.parents, 1);\n            assert.lengthOf(b.parents, 1);\n            assert.lengthOf(a.parents, 0);\n            \n            item.unmount((error, item) => {\n              assert.isNotOk(manager._items.a);\n              assert.isNotOk(manager._items.b, b);\n              assert.isNotOk(manager._items.c, c);\n              \n              assert.isTrue(a.isUnmounted);\n              assert.isTrue(b.isUnmounted);\n              assert.isTrue(c.isUnmounted);\n              \n              assert.lengthOf(c.parents, 1);\n              assert.lengthOf(b.parents, 1);\n              assert.lengthOf(a.parents, 0);\n              \n              done();\n            })\n          });\n        })\n      ;\n    });\n    \n    it('should check simple recursion', (done) => {\n      var memory = {\n        a: { childs: ['b'] },\n        b: { childs: ['c'] },\n        c: { childs: ['a'] },\n      };\n      \n      var manager = generateManager(memory);\n      \n      manager\n        .get('a')\n        .prepare((error, item) => {\n          assert.ifError(error);\n          \n          var a = item;\n          var b = item.childs.b;\n          var c = item.childs.b.childs.c;\n          \n          assert.equal(manager._items.a, a);\n          assert.equal(manager._items.b, b);\n          assert.equal(manager._items.c, c);\n          \n          assert.isTrue(a.isPrepared);\n          assert.isTrue(b.isPrepared);\n          assert.isTrue(c.isPrepared);\n          \n          assert.lengthOf(c.parents, 1);\n          assert.lengthOf(b.parents, 1);\n          assert.lengthOf(a.parents, 1);\n          \n          item.mount((error, item) => {\n            assert.ifError(error);\n            \n            assert.isTrue(a.isMounted);\n            assert.isTrue(b.isMounted);\n            assert.isTrue(c.isMounted);\n            \n            assert.lengthOf(c.parents, 1);\n            assert.lengthOf(b.parents, 1);\n            assert.lengthOf(a.parents, 1);\n            \n            item.unmount((error, item) => {\n              assert.isNotOk(manager._items.a);\n              assert.isNotOk(manager._items.b, b);\n              assert.isNotOk(manager._items.c, c);\n              \n              assert.isTrue(a.isUnmounted);\n              assert.isTrue(b.isUnmounted);\n              assert.isTrue(c.isUnmounted);\n              \n              assert.lengthOf(c.parents, 1);\n              assert.lengthOf(b.parents, 1);\n              assert.lengthOf(a.parents, 1);\n              \n              done();\n            })\n          });\n        })\n      ;\n    });\n    \n    it('should check many recursions', (done) => {\n      var memory = {\n        a: { childs: ['b'] },\n        b: { childs: ['c'] },\n        c: { childs: ['a', 'd'] },\n        d: { childs: ['e'] },\n        e: { childs: ['f'] },\n        f: { childs: ['d', 'a'] },\n      };\n      \n      var manager = generateManager(memory);\n      \n      manager\n        .get('a')\n        .prepare((error, item) => {\n          assert.ifError(error);\n          \n          var a = item;\n          var b = item.childs.b;\n          var c = b.childs.c;\n          var d = c.childs.d;\n          var e = d.childs.e;\n          var f = e.childs.f;\n          \n          assert.equal(manager._items.a, a);\n          assert.equal(manager._items.b, b);\n          assert.equal(manager._items.c, c);\n          assert.equal(manager._items.d, d);\n          assert.equal(manager._items.e, e);\n          assert.equal(manager._items.f, f);\n          \n          assert.isTrue(a.isPrepared);\n          assert.isTrue(b.isPrepared);\n          assert.isTrue(c.isPrepared);\n          assert.isTrue(d.isPrepared);\n          assert.isTrue(e.isPrepared);\n          assert.isTrue(f.isPrepared);\n\n          assert.lengthOf(f.parents, 1);\n          assert.lengthOf(e.parents, 1);\n          assert.lengthOf(d.parents, 2);\n          assert.lengthOf(c.parents, 1);\n          assert.lengthOf(b.parents, 1);\n          assert.lengthOf(a.parents, 2);\n          \n          item.mount((error, item) => {\n            assert.ifError(error);\n            \n            assert.isTrue(a.isMounted);\n            assert.isTrue(b.isMounted);\n            assert.isTrue(c.isMounted);\n            assert.isTrue(d.isMounted);\n            assert.isTrue(e.isMounted);\n            assert.isTrue(f.isMounted);\n  \n            assert.lengthOf(f.parents, 1);\n            assert.lengthOf(e.parents, 1);\n            assert.lengthOf(d.parents, 2);\n            assert.lengthOf(c.parents, 1);\n            assert.lengthOf(b.parents, 1);\n            assert.lengthOf(a.parents, 2);\n            \n            item.unmount((error, item) => {\n              assert.isNotOk(manager._items.a);\n              assert.isNotOk(manager._items.b);\n              assert.isNotOk(manager._items.c);\n              assert.isNotOk(manager._items.d);\n              assert.isNotOk(manager._items.e);\n              assert.isNotOk(manager._items.f);\n              \n              assert.isTrue(a.isUnmounted);\n              assert.isTrue(b.isUnmounted);\n              assert.isTrue(c.isUnmounted);\n              assert.isTrue(d.isUnmounted);\n              assert.isTrue(e.isUnmounted);\n              assert.isTrue(f.isUnmounted);\n    \n              assert.lengthOf(f.parents, 1);\n              assert.lengthOf(e.parents, 1);\n              assert.lengthOf(d.parents, 2);\n              assert.lengthOf(c.parents, 1);\n              assert.lengthOf(b.parents, 1);\n              assert.lengthOf(a.parents, 2);\n              \n              done();\n            })\n          });\n        })\n      ;\n    });\n  });\n  describe('realistic', () => {\n    function generateManager(memory) {\n      return new Manager(\n        class extends Item {\n          preparation(callback) {\n            this.data = memory[this.name];\n            for (var c in this.data.childs) {\n              this.prepareChild(this.data.childs[c]);\n            }\n            this.exports = {};\n            this.prepared(undefined, callback);\n          }\n          mounting(callback) {\n            var item = this;\n            each(this.childs, (child, next) => {\n              this.mountChild(child, () => {\n                next();\n              });\n            }, () => {\n              if (this.data.type == 'js') {\n                eval(this.data.data);\n              } else if (this.data.type == 'css') {\n                this.exports = this.data.data;\n                this.manager.get('a').exports[this.name] = this.exports;\n              } else if (this.data.type == 'root') {\n              }\n              this.mounted(undefined, callback);\n            });\n          }\n          unmounting(callback) {\n            for (var c in this.childs) {\n              this.childs[c].unmount();\n            }\n            if (this.data.type == 'css') {\n              delete this.manager.get('a').exports[this.name];\n            }\n            this.unmounted(undefined, callback);\n          }\n        }\n      );\n    };\n    \n    it('should check fake js and css items', (done) => {\n      var memory = {\n        a: { childs: ['b'], type: 'root' },\n        b: { childs: ['c', 'e'], type: 'js', data: 'item.exports = item.data' },\n        c: { childs: ['d'], type: 'js', data: 'item.exports = item.data' },\n        d: { type: 'css', data: 'body { color: black; }' },\n        e: { childs: ['d'], type: 'js', data: 'item.exports = item.data' },\n      };\n      \n      var manager = generateManager(memory);\n      \n      manager\n        .get('a')\n        .prepare((error, item) => {\n          item.mount((error, item) => {\n            assert.equal(manager._items.a.data, memory.a);\n            assert.equal(manager._items.b.data, memory.b);\n            assert.equal(manager._items.c.data, memory.c);\n            assert.equal(manager._items.d.data, memory.d);\n            assert.equal(manager._items.e.data, memory.e);\n            \n            assert.equal(item.exports.d, manager._items.d.exports);\n            \n            item.unmount((error, item) => {\n              assert.isNotOk(manager._items.a);\n              assert.isNotOk(manager._items.b);\n              assert.isNotOk(manager._items.c);\n              assert.isNotOk(manager._items.d);\n              assert.isNotOk(manager._items.e);\n            \n              assert.isNotOk(item.exports.d);\n              \n              done();\n            });\n          });\n        })\n      ;\n    });\n  });\n});"]}