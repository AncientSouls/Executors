{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","getEnv","callback","cache","get","query","Item","Promise","reject","mount","assertAllUnmounted","c","isFalse","isMounted","resolve","describe","it","then","equal","g","getResult","isTrue","text","unmount","f","childs","a","b","document","d","deepEqual","getResults"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport async from 'async';\nimport each from 'async/each';\nimport lodash from 'lodash';\nimport colors from 'colors';\nimport PromiseProps from 'p-props';\n\nimport documents from './documents';\n\nimport {\n  Item as ProtoItem,\n  js,\n} from '../lib/implementation';\n\nfunction getEnv(callback) {\n  \n  var cache = {};\n  \n  function get(query) {\n    if (!cache[query]) {\n      if (query == 'js') cache[query] = new Item(js);\n      else if (!documents[query]) return Promise.reject(`Data by query ${query} not founded.`);\n      else cache[query] = new Item(documents[query]);\n    }\n    \n    return cache[query].mount();\n  };\n  \n  class Item extends ProtoItem {\n    get(query) {\n      return get(query);\n    }\n  }\n  \n  function assertAllUnmounted() {\n    for (var c in cache) {\n      assert.isFalse(cache[c].isMounted());\n    }\n  };\n  \n  return new Promise((resolve) => {\n    resolve(callback(get, cache, assertAllUnmounted));\n  });\n}\n\ndescribe('AncientSouls/Funicular', () => {\n  \n  // g:t(text)=test\n  // text:text(js)=Object\n  it('should unmount type as parent', () => getEnv((get, cache, assertAllUnmounted) => (\n    get('g')\n    // Is item mounted?\n    .then(g => assert.equal(g.getResult(), 'test') || g)\n    // Is type mounted?\n    .then(g => get('text').then(text => assert.isTrue(text.isMounted())).then(() => g))\n    .then(g => g.unmount())\n    // Is item unmounted?\n    .then(g => assert.isFalse(g.isMounted()) || g)\n    // Is type unmounted?\n    .then(g => assert.isFalse(cache.text.isMounted()) || g)\n    .then(g => assertAllUnmounted())\n  )));\n  \n  // c:x(js)={ a:z(js)=1, b:y(js)=2 }=3\n  // f:u(js)={ a:z(js)=1, b:y(js)=2 }='12'\n  it('should unmount only items without parents', () => getEnv((get, cache, assertAllUnmounted) => (\n    get('c')\n    .then(c => get('f'))\n    .then((f) => {\n      // Is items mounted?\n      assert.equal(f.getResult(), '12');\n      assert.equal(f.childs.a.getResult(), 1);\n      assert.equal(f.childs.b.getResult(), 2);\n      \n      return f;\n    })\n    .then(f => f.unmount())\n    .then(f => {\n      // Is items unmounted?\n      assert.isFalse(f.isMounted());\n      assert.isTrue(f.childs.a.isMounted());\n      assert.isTrue(f.childs.b.isMounted());\n      \n      return f;\n    })\n    .then(f => (\n      get('c')\n      .then(c => {\n        // Is items mounted?\n        assert.equal(c.getResult(), 3);\n        assert.equal(c.childs.a.getResult(), 1);\n        assert.equal(c.childs.b.getResult(), 2);\n        \n        return c;\n      })\n      .then(c => c.unmount())\n      .then(c => {\n        // Is items unmounted?\n        assert.isFalse(c.isMounted());\n        assert.isFalse(c.childs.a.isMounted());\n        assert.isFalse(c.childs.b.isMounted());\n        \n        return c;\n      })\n      .then(c => f)\n    ))\n    .then(f => assertAllUnmounted())\n  )));\n  \n  // c:x(js)={ a:z(js)=1, b:y(js)=2 }=3\n  it('js concept', () => getEnv((get, cache, assertAllUnmounted) => (\n    get('c')\n    .then(c => {\n      // Is items mounted?\n      assert.equal(c.getResult(), 3);\n      assert.equal(c.childs.a.getResult(), 1);\n      assert.equal(c.childs.b.getResult(), 2);\n      \n      return c;\n    })\n    .then(c => c.unmount())\n    .then(c => {\n      // Is items unmounted?\n      assert.isFalse(c.isMounted());\n      assert.isFalse(c.childs.a.isMounted());\n      assert.isFalse(c.childs.b.isMounted());\n      \n      return c;\n    })\n    .then(c => assertAllUnmounted())\n  )));\n  \n  // e:v(js)={ document:document(js)=Object, d:w=String }=String\n  // document = [w,e]\n  it('css concept', () => getEnv((get, cache, assertAllUnmounted) => (\n    get('e')\n    .then(c => {\n      // Is items mounted?\n      assert.equal(c.getResult(), '<div>123</div>');\n      assert.equal(typeof(c.childs.document.getResult()), 'object');\n      assert.equal(c.childs.d.getResult(), 'body { color: red; }');\n      \n      return c;\n    })\n    .then(c => (\n      get('document')\n      .then(document => {\n        // Document has been generated?\n        assert.deepEqual(\n          document.getResult().getResults(),\n          [ 'body { color: red; }', '<div>123</div>' ]\n        );\n        \n        return document;\n      })\n      .then(document => c)\n    ))\n    .then(c => c.unmount())\n    .then(c => {\n      // Is items unmounted?\n      assert.isFalse(c.isMounted());\n      assert.isFalse(c.childs.d.isMounted());\n      assert.isFalse(c.childs.document.isMounted());\n      \n      return c;\n    })\n    .then(c => assertAllUnmounted())\n  )));\n});"]}