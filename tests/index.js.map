{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","generateGraph","collection","id","childs","generateFunicular","graph","funicular","OldCarriage","Carriage","callback","unsubscribe","updateStop","removeStop","on","oldData","newData","name","updated","removed","get","undefined","error","data","fetched","describe","it","a","deepProperty","done","insert","mount","ifError","instanceOf","equal","stage","_childs","b","_parents","unmount","notDeepProperty"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport Funicular, { Carriage } from '../lib';\nimport { ObjectGraph } from 'ancient-graph';\nimport async from 'async';\n\nfunction generateGraph(collection = []) {\n  return new ObjectGraph(collection, { id: 'id', childs: 'childs', });\n};\n\nfunction generateFunicular(graph = generateGraph()) {\n  var funicular = new Funicular();\n  \n  var OldCarriage = funicular.Carriage;\n  funicular.Carriage = class extends OldCarriage {\n    subscribe(callback) {\n      this.unsubscribe = () => {\n        updateStop();\n        removeStop();\n      };\n      var updateStop = graph.on('update', (oldData, newData) => {\n        if (newData.id == this.name) this.updated(newData);\n      });\n      var removeStop = graph.on('remove', (oldData, newData) => {\n        if (newData.id == this.name) this.removed();\n      });\n      graph.get(this.name, undefined, (error, data) => {\n        this.fetched(error, data);\n        callback(error);\n      });\n    }\n    generateChildNamesFromData() {\n      this.childs = this.data.childs;\n    }\n  }\n  \n  return funicular;\n}; \n\ndescribe('AncientSouls/Funicular', function() {\n  it('new Funicular', function() {\n    generateFunicular();\n  });\n  it('new funicular.Carriage', function() {\n    var funicular = generateFunicular();\n    var a = new funicular.Carriage('a');\n    assert.deepProperty(funicular, 'carriages.a.'+a.id);\n  });\n  it('funicular.mount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      assert.ifError(error);\n      assert.instanceOf(a, Carriage);\n      assert.deepProperty(a, 'data.id');\n      assert.equal(a.data.id, 'a');\n      assert.equal(a.stage, 'mounted');\n      done();\n    });\n  });\n  it('funicular.mount with childs', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      assert.ifError(error);\n      assert.instanceOf(a, Carriage);\n      assert.deepProperty(a, 'data.id');\n      assert.equal(a.data.id, 'a');\n      assert.equal(a.stage, 'mounted');\n      assert.deepProperty(a, '_childs.b');\n      assert.instanceOf(a._childs.b, Carriage);\n      assert.deepProperty(a, '_childs.b._parents.a');\n      assert.equal(a._childs.b._parents.a, a);\n      assert.equal(a._childs.b.stage, 'mounted');\n      done();\n    });\n  });\n  it('carriage.unmount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      a.unmount(() => {\n        assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n        assert.equal(a.stage, 'unmounted');\n        done();\n      });\n    });\n  });\n  it('carriage.unmount with childs', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      var b = a._childs.b;\n      a.unmount(() => {\n        assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n        assert.notDeepProperty(funicular, 'carriages.b.'+b.id);\n        assert.equal(a.stage, 'unmounted');\n        assert.equal(b.stage, 'unmounted');\n        done();\n      });\n    });\n  });\n});"]}