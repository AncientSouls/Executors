{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","generateGraph","collection","id","childs","generateFunicular","graph","funicular","OldCarriage","Carriage","callback","unsubscribe","updateStop","removeStop","on","oldData","newData","name","updated","removed","get","query","undefined","error","data","fetched","describe","it","a","notDeepProperty","done","insert","mount","ifError","instanceOf","deepProperty","equal","stage","_childs","b","_parents","unmount","mountRoot","unmountRootA","newCarriage","remountedCarriage","mountedCallbacks","unmountedCallbacks","moveRoots","unmountRoot","update","$set","_mount","mountedCallback","unmountedCallback","carriage","carriages","c","arguments","push","setTimeout","counter"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport Funicular, { Carriage } from '../lib';\nimport { ObjectGraph } from 'ancient-graph';\nimport async from 'async';\n\nfunction generateGraph(collection = []) {\n  return new ObjectGraph(collection, { id: 'id', childs: 'childs', });\n};\n\nfunction generateFunicular(graph = generateGraph()) {\n  var funicular = new Funicular();\n  \n  var OldCarriage = funicular.Carriage;\n  funicular.Carriage = class extends OldCarriage {\n    subscribe(callback) {\n      this.unsubscribe = () => {\n        updateStop();\n        removeStop();\n      };\n      var updateStop = graph.on('update', (oldData, newData) => {\n        if (newData.id == this.name) this.updated(newData);\n      });\n      var removeStop = graph.on('remove', (oldData, newData) => {\n        if (newData.id == this.name) this.removed();\n      });\n      graph.get(this.query, undefined, (error, data) => {\n        this.name = data.id;\n        this.fetched(error, data);\n        callback(error);\n      });\n    }\n    getChildsQueries(callback) {\n      this.childs = this.data.childs;\n      callback();\n    }\n  }\n  \n  return funicular;\n}; \n\ndescribe('AncientSouls/Funicular', function() {\n  it('new Funicular', function() {\n    generateFunicular();\n  });\n  it('new funicular.Carriage', function() {\n    var funicular = generateFunicular();\n    var a = new funicular.Carriage('a');\n    assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n  });\n  it('funicular.mount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      assert.ifError(error);\n      assert.instanceOf(a, Carriage);\n      assert.deepProperty(a, 'data.id');\n      assert.equal(a.data.id, 'a');\n      assert.equal(a.stage, 'mounted');\n      done();\n    });\n  });\n  it('funicular.mount with childs', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      assert.ifError(error);\n      assert.instanceOf(a, Carriage);\n      assert.deepProperty(a, 'data.id');\n      assert.equal(a.data.id, 'a');\n      assert.equal(a.stage, 'mounted');\n      assert.deepProperty(a, '_childs.b');\n      assert.instanceOf(a._childs.b, Carriage);\n      assert.deepProperty(a, '_childs.b._parents.a');\n      assert.equal(a._childs.b._parents.a, a);\n      assert.equal(a._childs.b.stage, 'mounted');\n      done();\n    });\n  });\n  it('carriage.unmount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      a.unmount(() => {\n        assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n        assert.equal(a.stage, 'unmounted');\n        done();\n      });\n    });\n  });\n  it('carriage.unmount with childs', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, a) => {\n      var b = a._childs.b;\n      a.unmount((error) => {\n        assert.ifError(error);\n        assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n        assert.notDeepProperty(funicular, 'carriages.b.'+b.id);\n        assert.equal(a.stage, 'unmounted');\n        assert.equal(b.stage, 'unmounted');\n        done();\n      });\n    });\n  });\n  it('carriage.mountRoot and unmountRoot', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular.mountRoot('a', (error, a, unmountRootA) => {\n      var b = a._childs.b;\n      a.unmount((error) => {\n        assert.ifError(error);\n        assert.instanceOf(a, Carriage);\n        assert.deepProperty(a, 'data.id');\n        assert.equal(a.data.id, 'a');\n        assert.equal(a.stage, 'mounted');\n        assert.deepProperty(a, '_childs.b');\n        assert.instanceOf(a._childs.b, Carriage);\n        assert.deepProperty(a, '_childs.b._parents.a');\n        assert.equal(a._childs.b._parents.a, a);\n        assert.equal(a._childs.b.stage, 'mounted');\n        unmountRootA((error) => {\n          assert.ifError(error);\n          assert.notDeepProperty(funicular, 'carriages.a.'+a.id);\n          assert.notDeepProperty(funicular, 'carriages.b.'+b.id);\n          assert.equal(a.stage, 'unmounted');\n          assert.equal(b.stage, 'unmounted');\n          done();\n        });\n      });\n    });\n  });\n  it('update with remaunting', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    var OldCarriage = funicular.Carriage;\n    funicular.Carriage = class extends OldCarriage {\n      updated(newData) {\n        funicular.mount(this.name, (error, newCarriage) => {\n          this.remountedCarriage = newCarriage;\n          newCarriage.mountedCallbacks = this.mountedCallbacks;\n          this.mountedCallbacks = [];\n          newCarriage.unmountedCallbacks = this.unmountedCallbacks;\n          this.moveRoots(newCarriage);\n          this.unmount();\n          this.unmountedCallbacks = [];\n        });\n      }\n    };\n    funicular.mountRoot('a', (error, a, unmountRoot) => {\n      graph.update('a', { $set: { childs: ['b'] } });\n    }, (a) => {\n      assert.equal(a.stage, 'unmounted');\n      assert.instanceOf(a.remountedCarriage, Carriage);\n      assert.equal(a.remountedCarriage.stage, 'mounted');\n      done();\n    });\n  });\n  it('multiple maunting processes with one carriage in result', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a', childs: ['b'] });\n    graph.insert({ id: 'b' });\n    var funicular = generateFunicular(graph);\n    funicular._mount = funicular.mount;\n    funicular.mount = function(name, mountedCallback, unmountedCallback) {\n      var carriage;\n      if (this.carriages[name]) {\n        for (var c in this.carriages[name]) {\n          carriage = this.carriages[name][c];\n        }\n      }\n      if (!carriage) {\n        funicular._mount(...arguments);\n      } else {\n        if (carriage.stage != 'mounted') {\n          if (mountedCallback) carriage.mountedCallbacks.push(mountedCallback);\n        } else mountedCallback(undefined, carriage);\n        if (carriage.stage != 'unmounted') {\n          if (unmountedCallback) carriage.unmountedCallbacks.push(unmountedCallback);\n        }\n      }\n    };\n    var OldCarriage = funicular.Carriage;\n    funicular.Carriage = class extends OldCarriage {\n      unsafeMount(callback) {\n        setTimeout(() => {\n          super.unsafeMount(callback);\n        }, 100);\n      }\n      updated(newData) {\n        this.funicular._mount(this.name, (error, newCarriage) => {\n          this.remountedCarriage = newCarriage;\n          newCarriage.mountedCallbacks = this.mountedCallbacks;\n          this.mountedCallbacks = [];\n          newCarriage.unmountedCallbacks = this.unmountedCallbacks;\n          this.moveRoots(newCarriage);\n          this.unmount();\n          this.unmountedCallbacks = [];\n        });\n      }\n    };\n    var counter = 0;\n    funicular.mountRoot('a', (error, a, unmountRoot) => {\n      counter++;\n    });\n    funicular.mountRoot('a', (error, a, unmountRoot) => {\n      graph.update('a', { $set: { childs: ['b'] } });\n    }, (a) => {\n      assert.equal(counter, 1);\n      assert.equal(a.stage, 'unmounted');\n      assert.instanceOf(a.remountedCarriage, Carriage);\n      assert.equal(a.remountedCarriage.stage, 'mounted');\n      done();\n    });\n  });\n});"]}