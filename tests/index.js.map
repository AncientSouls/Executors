{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","cache","get","query","Item","Promise","reject","mount","describe","it","then","equal","i","getResult","unmount","isFalse","isMounted","done","deepEqual","document","getResults"],"mappings":"wgBAEA,0BACA,4B,2CACA,gC,yCACA,8B,6CACA,8B,6CACA,+B,6CAEA,sC,mDAEA,qD,63BAXAA,QAAQ,oBAAR,EAA8BC,OAA9B,GAgBA,GAAIC,OAAQ,EAAZ,CACA,QAASC,KAAT,CAAaC,KAAb,CAAoB,CAClB,GAAI,CAACF,MAAME,KAAN,CAAL,CAAmB,CACjB,GAAIA,OAAS,gBAAb,CAA+BF,MAAME,KAAN,EAAe,GAAIC,KAAJ,oBAAf,CAA/B,IACK,IAAI,CAAC,oBAAUD,KAAV,CAAL,CAAuB,MAAOE,SAAQC,MAAR,kBAAgCH,KAAhC,iBAAP,CAAvB,IACAF,OAAME,KAAN,EAAe,GAAIC,KAAJ,CAAS,oBAAUD,KAAV,CAAT,CACrB,CAED,MAAOF,OAAME,KAAN,EAAaI,KAAb,EACR,E,GAEKH,K,yPACAD,K,CAAO,CACT,MAAOD,MAAIC,KAAJ,CACR,C,uCAGHK,SAAS,wBAAT,CAAmC,UAAM,CACvCC,GAAG,IAAH,CAAS,cAAQ,CACfP,KAAI,GAAJ,EACCQ,IADD,CACM,WAAK,CACT,aAAOC,KAAP,CAAaC,EAAEC,SAAF,EAAb,CAA4B,CAA5B,EACA,MAAOD,EACR,CAJD,EAKCF,IALD,CAKM,kBAAKE,GAAEE,OAAF,EAAL,CALN,EAMCJ,IAND,CAMM,kBAAK,cAAOK,OAAP,CAAeH,EAAEI,SAAF,EAAf,GAAiCJ,CAAtC,CANN,EAOCF,IAPD,CAOM,kBAAKO,OAAL,CAPN,CAQD,CATD,EAUAR,GAAG,KAAH,CAAU,SAACQ,IAAD,CAAU,CAClBf,KAAI,GAAJ,EACCQ,IADD,CACM,SAACE,CAAD,CAAO,CACX,aAAOM,SAAP,CACEjB,MAAMkB,QAAN,CAAeN,SAAf,GAA2BO,UAA3B,EADF,CAEE,CAAE,sBAAF,CAA0B,gBAA1B,CAFF,EAIAH,MACD,CAPD,CAQD,CATD,CAUD,CArBD","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport async from 'async';\nimport each from 'async/each';\nimport lodash from 'lodash';\nimport colors from 'colors';\nimport PromiseProps from 'p-props';\n\nimport documents from './documents';\n\nimport {\n  Item as ProtoItem,\n  js,\n} from '../lib/implementation';\n\nvar cache = {};\nfunction get(query) {\n  if (!cache[query]) {\n    if (query == 'executors://js') cache[query] = new Item(js);\n    else if (!documents[query]) return Promise.reject(`Data by query ${query} not founded.`);\n    else cache[query] = new Item(documents[query]);\n  }\n  \n  return cache[query].mount();\n};\n\nclass Item extends ProtoItem {\n  get(query) {\n    return get(query);\n  }\n}\n\ndescribe('AncientSouls/Funicular', () => {\n  it('js', done => {\n    get('c')\n    .then(i => {\n      assert.equal(i.getResult(), 3);\n      return i;\n    })\n    .then(i => i.unmount())\n    .then(i => assert.isFalse(i.isMounted()) || i)\n    .then(i => done())\n  });\n  it('css', (done) => {\n    get('e')\n    .then((i) => {\n      assert.deepEqual(\n        cache.document.getResult().getResults(),\n        [ 'body { color: red; }', '<div>123</div>' ]\n      );\n      done();\n    })\n  });\n});"]}