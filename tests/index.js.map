{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","generateGraph","collection","id","childs","generateFunicular","graph","funicular","OldCarriage","Carriage","callback","unsubscribe","on","oldData","newData","name","updated","removed","get","undefined","error","data","fetched","describe","it","carriage","deepProperty","done","insert","mount","ifError","instanceOf","equal","stage","unmount","notDeepProperty"],"mappings":"wgBAEA,0BACA,2B,uCACA,2CACA,4B,w6BALAA,QAAQ,oBAAR,EAA8BC,OAA9B,GAOA,QAASC,cAAT,EAAwC,IAAjBC,WAAiB,2DAAJ,EAAI,CACtC,MAAO,+BAAgBA,UAAhB,CAA4B,CAAEC,GAAI,IAAN,CAAYC,OAAQ,QAApB,CAA5B,CACR,EAED,QAASC,kBAAT,EAAoD,IAAzBC,MAAyB,2DAAjBL,eAAiB,CAClD,GAAIM,WAAY,iBAAhB,CAEA,GAAIC,aAAcD,UAAUE,QAA5B,CACAF,UAAUE,QAAV,qRACYC,QADZ,CACsB,iBAClB,KAAKC,WAAL,CAAmB,UAAM,CAAE,CAA3B,CACAL,MAAMM,EAAN,CAAS,QAAT,CAAmB,SAACC,OAAD,CAAUC,OAAV,CAAuB,CACxC,GAAIA,QAAQX,EAAR,EAAc,OAAKY,IAAvB,CAA6B,OAAKC,OAAL,CAAaF,OAAb,CAC9B,CAFD,EAGAR,MAAMM,EAAN,CAAS,QAAT,CAAmB,SAACC,OAAD,CAAUC,OAAV,CAAuB,CACxC,GAAIA,QAAQX,EAAR,EAAc,OAAKY,IAAvB,CAA6B,OAAKE,OAAL,EAC9B,CAFD,EAGAX,MAAMY,GAAN,CAAU,KAAKH,IAAf,CAAqBI,SAArB,CAAgC,SAACC,KAAD,CAAQC,IAAR,CAAiB,CAC/C,OAAKC,OAAL,CAAaF,KAAb,CAAoBC,IAApB,EACAX,SAASU,KAAT,CACD,CAHD,CAID,CAbH,mBAAmCZ,WAAnC,EAgBA,MAAOD,UACR,EAEDgB,SAAS,wBAAT,CAAmC,UAAW,CAC5CC,GAAG,eAAH,CAAoB,UAAW,CAC7BnB,mBACD,CAFD,EAGAmB,GAAG,wBAAH,CAA6B,UAAW,CACtC,GAAIjB,WAAYF,mBAAhB,CACA,GAAIoB,UAAW,GAAIlB,WAAUE,QAAd,CAAuB,GAAvB,CAAf,CACA,aAAOiB,YAAP,CAAoBnB,SAApB,CAA+B,eAAekB,SAAStB,EAAvD,CACD,CAJD,EAKAqB,GAAG,iBAAH,CAAsB,SAASG,IAAT,CAAe,CACnC,GAAIrB,OAAQL,eAAZ,CACAK,MAAMsB,MAAN,CAAa,CAAEzB,GAAI,GAAN,CAAb,EACA,GAAII,WAAYF,kBAAkBC,KAAlB,CAAhB,CACAC,UAAUsB,KAAV,CAAgB,GAAhB,CAAqB,SAACT,KAAD,CAAQK,QAAR,CAAqB,CACxC,aAAOK,OAAP,CAAeV,KAAf,EACA,aAAOW,UAAP,CAAkBN,QAAlB,gBACA,aAAOC,YAAP,CAAoBD,QAApB,CAA8B,SAA9B,EACA,aAAOO,KAAP,CAAaP,SAASJ,IAAT,CAAclB,EAA3B,CAA+B,GAA/B,EACA,aAAO6B,KAAP,CAAaP,SAASQ,KAAtB,CAA6B,SAA7B,EACAN,MACD,CAPD,CAQD,CAZD,EAaAH,GAAG,kBAAH,CAAuB,SAASG,IAAT,CAAe,CACpC,GAAIrB,OAAQL,eAAZ,CACAK,MAAMsB,MAAN,CAAa,CAAEzB,GAAI,GAAN,CAAb,EACA,GAAII,WAAYF,kBAAkBC,KAAlB,CAAhB,CACAC,UAAUsB,KAAV,CAAgB,GAAhB,CAAqB,SAACT,KAAD,CAAQK,QAAR,CAAqB,CACxCA,SAASS,OAAT,CAAiB,UAAM,CACrB,aAAOC,eAAP,CAAuB5B,SAAvB,CAAkC,eAAekB,SAAStB,EAA1D,EACA,aAAO6B,KAAP,CAAaP,SAASQ,KAAtB,CAA6B,WAA7B,EACAN,MACD,CAJD,CAKD,CAND,CAOD,CAXD,CAYD,CAlCD","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport Funicular, { Carriage } from '../lib';\nimport { ObjectGraph } from 'ancient-graph';\nimport async from 'async';\n\nfunction generateGraph(collection = []) {\n  return new ObjectGraph(collection, { id: 'id', childs: 'childs', });\n};\n\nfunction generateFunicular(graph = generateGraph()) {\n  var funicular = new Funicular();\n  \n  var OldCarriage = funicular.Carriage;\n  funicular.Carriage = class extends OldCarriage {\n    subscribe(callback) {\n      this.unsubscribe = () => {};\n      graph.on('update', (oldData, newData)  => {\n        if (newData.id == this.name) this.updated(newData);\n      });\n      graph.on('remove', (oldData, newData)  => {\n        if (newData.id == this.name) this.removed();\n      });\n      graph.get(this.name, undefined, (error, data) => {\n        this.fetched(error, data);\n        callback(error);\n      });\n    }\n  }\n  \n  return funicular;\n}; \n\ndescribe('AncientSouls/Funicular', function() {\n  it('new Funicular', function() {\n    generateFunicular();\n  });\n  it('new funicular.Carriage', function() {\n    var funicular = generateFunicular();\n    var carriage = new funicular.Carriage('a');\n    assert.deepProperty(funicular, 'carriages.a.'+carriage.id);\n  });\n  it('funicular.mount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, carriage) => {\n      assert.ifError(error);\n      assert.instanceOf(carriage, Carriage);\n      assert.deepProperty(carriage, 'data.id');\n      assert.equal(carriage.data.id, 'a');\n      assert.equal(carriage.stage, 'mounted');\n      done();\n    });\n  });\n  it('carriage.unmount', function(done) {\n    var graph = generateGraph();\n    graph.insert({ id: 'a' });\n    var funicular = generateFunicular(graph);\n    funicular.mount('a', (error, carriage) => {\n      carriage.unmount(() => {\n        assert.notDeepProperty(funicular, 'carriages.a.'+carriage.id);\n        assert.equal(carriage.stage, 'unmounted');\n        done();\n      });\n    });\n  });\n});"]}